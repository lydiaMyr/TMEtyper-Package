TMEtyper
TMEtyper()
library(TMEtyper)
devtools::build()
devtools::build()
devtools::check()
install.packages("GSVA")
library(GSVA)
devtools::check()
devtools::install()
library(TMEtyper)
TMEtyper()
TMEtyper
get_example_data_path <- function() {
system.file("data", "example_data.txt", package = "YourPackageName")
}
get_example_data_path()
get_example_data_path()
get_example_data_path <- function() {
system.file("data", "example_data.txt", package = "TMEtyper")
}
get_example_data_path()
file_path=get_example_data_path()
TMEtyper(file_path,"rnaseq")
library(GSVA)
# 定义 T 细胞耗竭基因集
exhaustion_genes <- list(
Tcell_Exhaustion = c("PDCD1", "CTLA4", "LAG3", "TIM3", "TIGIT",
"HAVCR2", "BTLA", "CD244", "ENTPD1", "CD160")
)
exp=read.table("C:/Users/10767/Desktop/example_data.txt",header=T,sep="\t",row.names=1)
library(GSVA)
library(Biobase)
# 假设您有一个表达矩阵 exp_matrix
# 行是基因，列是样本
# exp_matrix <- your_expression_data
# 定义 T 细胞耗竭基因集
exhaustion_genes <- list(
Tcell_Exhaustion = c("PDCD1", "CTLA4", "LAG3", "TIM3", "TIGIT",
"HAVCR2", "BTLA", "CD244", "ENTPD1", "CD160")
)
# 方法1: 使用 ssgseaParam (GSVA >= 1.38.0)
# 方法2: 传统语法
exhaustion_scores <- gsva(as.matrix(exp),
exhaustion_genes,
method = "ssgsea")         # 显示进度
# 查看结果
print(head(exhaustion_scores))
library(GSVA)
# 检查版本并选择相应方法
gsva_version <- packageVersion("GSVA")
if (exists("ssgseaParam", where = asNamespace("GSVA"))) {
# 新版本：使用 ssgseaParam
param <- ssgseaParam(as.matrix(exp), exhaustion_genes)
scores <- gsva(param)
} else {
# 旧版本：直接参数传递
scores <- gsva(as.matrix(exp), exhaustion_genes, method = "ssgsea")
}
devtools::build()
devtools::install()
devtools::reload()
file_path = system.file("data", "example_data.txt", package = "YourPackageName")
file_path
file_path = system.file("data", "example_data.txt", package = "TMEtyper")
file_path
TMEtyper(file_path,"rnaseq")
library(nnet)    # 神经网络
library(caret)   # 数据预处理和模型评估
TMEtyper(file_path,"rnaseq")
TMEtyper(file_path,"rnaseq")->test
test$TME_sub
devtools::build()
devtools::load_all()
devtools::document()
devtools::install()
library(TMEtyper)
file_path = system.file("data", "example_data.txt", package = "TMEtyper")
TMEtyper(file_path,"rnaseq")
file_path = system.file("data", "example_data.txt", package = "TMEtyper")
file_path
file_path = system.file("data", "example_data.txt", package = "TMEtyper")
file_path
file_path = system.file("data", "example_data.txt", package = "TMEtyper")
remove.packages(TMEtyper)
remove.packages("TMEtyper")
devtools::install(force = TRUE, build = TRUE)
# 在新的 R 会话中运行
devtools::install(force = TRUE)
library(TMEtyper)
file_path = system.file("data", "example_data.txt", package = "TMEtyper")
file_path
devtools::load_all()
remove.packages("TMEtyper")
devtools::install()
library(TMEtyper)
file_path = system.file("data", "example_data.txt", package = "TMEtyper")
file_path
# 在包开发目录中检查
print("当前目录中的文件:")
list.files(recursive = TRUE)[grepl("example_data", list.files(recursive = TRUE))]
devtools::clean_dll()
pkgbuild::clean_dll()
# 2. 重新生成文档
devtools::document()
devtools::build()
built_file <- list.files(pattern = "\\.tar\\.gz$")[1]
if (!is.na(built_file)) {
print(paste("构建的包:", built_file))
# 查看包内容（在终端中运行）
# system(paste("tar -tf", built_file))
}
built_file
devtools::install(force = TRUE)
library(TMEtyper)
# 检查文件路径
file_path <- system.file("extdata", "example_data.txt", package = "TMEtyper")
print(paste("文件路径:", file_path))
file_path
# 在包的开发根目录运行
cat("=== 当前目录结构 ===\n")
print(list.files(recursive = TRUE, pattern = "example_data"))
cat("\n=== 检查关键目录 ===\n")
print(file.exists("inst/extdata/example_data.txt"))
print(file.exists("data/example_data.txt"))
print(file.exists("example_data.txt"))
# 创建正确的目录
if (!dir.exists("inst/extdata")) {
dir.create("inst/extdata", recursive = TRUE)
}
# 将文件从 data/ 移动到 inst/extdata/
file.copy("data/example_data.txt", "inst/extdata/example_data.txt", overwrite = TRUE)
# 验证移动成功
print(paste("文件现在在 inst/extdata/:", file.exists("inst/extdata/example_data.txt")))
print(paste("文件还在 data/:", file.exists("data/example_data.txt")))
# 清理
devtools::clean_dll()
# 重新生成文档
devtools::document()
# 构建包
devtools::build()
# 安装
devtools::install(force = TRUE)
# 测试
library(TMEtyper)
file_path <- system.file("extdata", "example_data.txt", package = "TMEtyper")
print(paste("文件路径:", file_path))
print(paste("文件存在:", file.exists(file_path)))
file_path = system.file("data", "example_data.txt", package = "TMEtyper")
file_path
file_path <- system.file("extdata", "example_data.txt", package = "TMEtyper")
file_path
file_path <- system.file("extdata", "example_data.txt", package = "TMEtyper")
file_path
TMEtyper(file_path,"rnaseq")
# 运行全面的包检查
devtools::check()
# 检查是否有任何 ERROR、WARNING 或 NOTE
# 解决所有出现的问题
